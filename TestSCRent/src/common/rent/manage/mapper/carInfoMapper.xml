<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="common.rent.manage.mapper.carInfoMapper">

	<!-- 사고이력을 위한 resultMap -->
	<resultMap type="AccidentListOfCar" id="AccListResult">
		<result property="carid" column="a.carid" />
		<result property="accidentdate" column="a.accidentdate" />
		<result property="userid" column="a.userid" />
		<result property="documentid" column="documentnum" />
		<result property="managerid" column="a.managerid" />
		<result property="comments" column="a.comments" />
		<result property="userphone" column="userphone" />
		<result property="username" column="username" />
		<result property="managername" column="managername" />
	</resultMap>


	<!-- 보유중 차량목록 가져오기 -->
	<select id="selectCarList" resultType="Car">
		select carid, carname, cartype, company, price, km
		, persons, fuel,
		maxoutput, capacity, picture, status
		from car
		where status != 5
	</select>


	<!-- 보유중 차량목록의 전체 갯수 -->
	<select id="getTotal" resultType="int">
		select count(*) from car
	</select>


	<!-- 특정 차량의 정보 가져오기 -->
	<select id="selectCarInfo" parameterType="String" resultType="Car">
		select carid, carname, cartype, company, price, km
		, persons, fuel,
		maxoutput, capacity, picture, status
		from car
		where carid = #{carid}
	</select>


	<!-- 특정 차량의 사고이력 가져오기 -->
	<select id="selectAccList" parameterType="String" resultMap="AccListResult">
		select a.carid, a.accidentdate, a.userid, a.comments, a.documentno documentnum, a.managerid, u.phone userphone, u.name username, m.name managername
		from accident a, members u, managers m
		where a.carid = #{carid} 
		and a.userid = u.id 
		and a.managerid = m.id
	</select>

	<!-- 이번 달의 사고이력 갯수 가져오기 -->
	<select id="selectCurrentMonthAccCount" resultType="Integer">
		select count(*) 
		from accident
		where substr(to_char(accidentdate, 'YYYY-MM-DD HH24:MI'), 6, 2) = substr(to_char(sysdate, 'YYYY-MM-DD HH24:MI'), 6, 2)
	</select>

	<!-- 점검 필요한 차량목록 가져오기 -->
	<select id="selectInspectCarList" resultType="InspectInfo">
		select c.carid, c.carname, c.fuel, c.status, c.mileage, i.period, i.itemname, i.caption 
		from car c, inspect i 
		where c.mileage between i.period and i.period2
		and carcheck = 0
	</select>
	
	<!-- 점검 필요한 차량 갯수 가져오기 -->
	<select id="selectInspectCarCount" resultType="Integer">
		select count(*) 
		from car c, inspect i 
		where c.mileage between i.period and i.period2
		and carcheck = 0
	</select>


</mapper>
